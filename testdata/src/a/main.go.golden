
package a

import (
	"fmt"
	"strconv"
)

func doSomething() error {
	return nil
}

func doSmthManyArgs(a, b, c, d int) error {
	return nil
}

func doSmthMultipleReturn() (bool, error) {
	return false, nil
}

func valid() error {
	err := doSomething() // ok
	if err != nil {
		return err
	}

	err = doSmthManyArgs(0, 0, 0, 0) // ok
	if err != nil {
		return err
	}

	_, err = doSmthMultipleReturn() // ok
	if err != nil {
		return err
	}

	if ok, _ := strconv.ParseBool("1"); ok {
		fmt.Println("ok")
	}

	return nil
}

func invalid() error {
	err := doSomething()
    if err != nil { // want "avoid inline error handling using `if err := ...; err != nil`; use plain assignment `err := ...`"
		return err
	}

	err := doSmthManyArgs(0,
		0,
		0,
		0,
	)
    if err != nil {
		return err
	}

	if _, err := doSmthMultipleReturn(); err != nil { // want "avoid inline error handling using `if err := ...; err != nil`; use plain assignment `err := ...`"
		_ = false
		return err
	}
	return nil
}
